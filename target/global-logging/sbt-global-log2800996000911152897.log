[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_333)
[debug]             Load.loadUnit: plugins took 138.4728ms
[debug]             Load.loadUnit: defsScala took 0.013ms
[debug] [Loading] Scanning directory C:\Users\sokei\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sokei\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.0266 ms
[debug]                 Load.resolveProject(global-plugins) took 11.6975ms
[debug]               Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sokei\.sbt\1.0\plugins, plugins: List(<none>))) took 17.4253ms
[debug] [Loading] Done in C:\Users\sokei\.sbt\1.0\plugins, returning: (global-plugins)
[debug]             Load.loadUnit: loadedProjectsRaw took 21.2785ms
[debug]             Load.loadUnit: cleanEvalClasses took 0.0126ms
[debug]           Load.loadUnit(file:/C:/Users/sokei/.sbt/1.0/plugins/, ...) took 161.6651ms
[debug]         Load.apply: load took 174.253ms
[debug]         Load.apply: resolveProjects took 1.4616ms
[debug]         Load.apply: finalTransforms took 56.3181ms
[debug]         Load.apply: config.delegates took 0.8684ms
[debug]         Load.apply: Def.make(settings)... took 353.6663ms
[debug]         Load.apply: structureIndex took 43.782ms
[debug]         Load.apply: mkStreams took 0.0239ms
[info] loading global plugins from C:\Users\sokei\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug]       Load.defaultLoad until apply took 2286.7333ms
[debug]                 Load.loadUnit: plugins took 41.2523ms
[debug]                 Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI\project
[debug]                   Load.loadUnit: mkEval took 0.5484ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4635 ms
[info] loading settings for project formation_spark_idsi-build from idea.sbt ...
[debug]                     Load.resolveProject(formation_spark_idsi-build) took 2.6499ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id formation_spark_idsi-build, base: C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI\project, plugins: List(<none>))) took 4.7517ms
[debug] [Loading] Done in C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI\project, returning: (formation_spark_idsi-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 87.0256ms
[debug]                 Load.loadUnit: cleanEvalClasses took 1.1155ms
[debug]               Load.loadUnit(file:/C:/Users/sokei/IdeaProjects/Formation_SPARK_IDSI/project/, ...) took 130.6128ms
[debug]             Load.apply: load took 132.0723ms
[debug]             Load.apply: resolveProjects took 0.093ms
[debug]             Load.apply: finalTransforms took 5.1453ms
[debug]             Load.apply: config.delegates took 0.2734ms
[debug]             Load.apply: Def.make(settings)... took 45.0894ms
[debug]             Load.apply: structureIndex took 17.5087ms
[debug]             Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]           Load.loadUnit: plugins took 3829.6262ms
[debug]           Load.loadUnit: defsScala took 0.0124ms
[debug] [Loading] Scanning directory C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI
[debug]             Load.loadUnit: mkEval took 0.1834ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3105 ms
[info] loading settings for project formation_spark_idsi from build.sbt ...
[debug]               Load.resolveProject(formation_spark_idsi) took 44.0287ms
[debug]             Load.loadTransitive: finalizeProject(Project(id formation_spark_idsi, base: C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI, plugins: List(<none>))) took 46.5875ms
[debug] [Loading] Done in C:\Users\sokei\IdeaProjects\Formation_SPARK_IDSI, returning: (formation_spark_idsi)
[debug]           Load.loadUnit: loadedProjectsRaw took 2508.1872ms
[debug]           Load.loadUnit: cleanEvalClasses took 20.9044ms
[debug]         Load.loadUnit(file:/C:/Users/sokei/IdeaProjects/Formation_SPARK_IDSI/, ...) took 6359.2573ms
[debug]       Load.apply: load took 6361.857ms
[debug]       Load.apply: resolveProjects took 0.0899ms
[debug]       Load.apply: finalTransforms took 70.061ms
[debug]       Load.apply: config.delegates took 0.4121ms
[debug]       Load.apply: Def.make(settings)... took 134.5806ms
[debug]       Load.apply: structureIndex took 16.7772ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] set current project to Formation_SPARK_IDSI (in build file:/C:/Users/sokei/IdeaProjects/Formation_SPARK_IDSI/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51199 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51199, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Formation_SPARK_IDSI (in build file:/C:/Users/sokei/IdeaProjects/Formation_SPARK_IDSI/)
[debug] > Exec(idea-shell, None, None)
